{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"pylts Docs","text":"<p>Limited pydantic wrapper over litestream so that AWS litestream commands can be used as a subprocess of python scripts.</p>"},{"location":"#create-an-aws-bucket","title":"Create an AWS bucket","text":"<p>Follow instructions to get:</p> <ol> <li>S3 Key ID</li> <li>S3 Secret Key</li> <li>S3 Replica URL</li> </ol>"},{"location":"#set-secrets","title":"Set secrets","text":"<p>Secrets must be set in an <code>.env</code> file:</p> Secret Description LITESTREAM_ACCESS_KEY_ID See how this is generated in chosen bucket LITESTREAM_SECRET_ACCESS_KEY See how this is generated in chosen bucket REPLICA_URL Where to get the replica for restoration and replication, e.g. in aws: <code>s3://&lt;bucket_name&gt;/&gt;&lt;folder&gt;</code> DB_SQLITE Optional, Default: db.sqlite."},{"location":"#in-virtual-env","title":"In virtual env","text":"Bash<pre><code>poetry add pylts # install\npoetry shell # enter shell / virtual environment to set up secrets in local dev\nexport LITESTREAM_ACCESS_KEY_ID=xxx\nexport LITESTREAM_SECRET_ACCESS_KEY=yyy\nexport REPLICA_URL=s3://x/x.db\n</code></pre>"},{"location":"#reference","title":"Reference","text":""},{"location":"#set-local-folder","title":"Set local folder","text":"Python<pre><code># Assumes secrets already set\n&gt;&gt;&gt; from pylts import AmazonS3\n&gt;&gt;&gt; from pathlib import Path\n&gt;&gt;&gt; stream = AmazonS3(folder=Path().cwd() / \"data\") # default will be the parent of /pylts\n&gt;&gt;&gt; stream.dbpath\nPosixPath('.../pylts/data/db.sqlite')\n&gt;&gt;&gt; stream\n</code></pre>"},{"location":"#restore","title":"Restore","text":"<p>Download the database in the folder specified from the replica url <code>s3://</code></p> Python<pre><code>&gt;&gt;&gt; stream.restore()\n</code></pre>"},{"location":"#delete","title":"Delete","text":"<p>Delete the database in the folder specified.</p> Python<pre><code>&gt;&gt;&gt; stream.delete() # used prior to restoration\n</code></pre>"},{"location":"#replicate","title":"Replicate","text":"<p>Ypload the database in the replica url <code>s3://</code></p> Python<pre><code>&gt;&gt;&gt; stream.replicate() # will\n</code></pre>"},{"location":"#cli","title":"CLI","text":""},{"location":"#cli-restore","title":"CLI Restore","text":"Bash<pre><code># set secrets first\npython -m pylts aws-restore-db\n</code></pre>"},{"location":"#cli-replicate","title":"CLI Replicate","text":"Bash<pre><code># set secrets first\npython -m pylts aws-replicate-db\n</code></pre>"},{"location":"#dockerfile","title":"Dockerfile","text":"Elements Version Version List python <code>3.11.1</code> versions litestream <code>0.3.9</code> versions sqlite <code>3.40.1</code> versions Bash<pre><code>export LITESTREAM_ACCESS_KEY_ID=xxx\nexport LITESTREAM_SECRET_ACCESS_KEY=yyy\nexport REPLICA_URL=s3://x/x.db\npoetry export -f requirements.txt -o requirements.txt --without-hashes\ndocker build .\ndocker run it \\\n-e LITESTREAM_ACCESS_KEY_ID \\\n-e LITESTREAM_SECRET_ACCESS_KEY \\\n-e REPLICA_URL\n</code></pre>"}]}